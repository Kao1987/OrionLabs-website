{"numTotalTestSuites":43,"numPassedTestSuites":43,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":83,"numPassedTests":83,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754220299525,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","POST /auth/login"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts POST /auth/login should accept valid login payload and return user + token","status":"passed","title":"should accept valid login payload and return user + token","duration":13.36704199999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","POST /auth/login"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts POST /auth/login should return 401 with error structure for invalid credentials","status":"passed","title":"should return 401 with error structure for invalid credentials","duration":2.9593340000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","POST /auth/login"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts POST /auth/login should return 422 for validation errors","status":"passed","title":"should return 422 for validation errors","duration":2.2409169999999676,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","POST /auth/logout"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts POST /auth/logout should accept logout request and return success","status":"passed","title":"should accept logout request and return success","duration":1.3647919999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","POST /auth/logout"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts POST /auth/logout should handle logout when already logged out","status":"passed","title":"should handle logout when already logged out","duration":1.0040420000000267,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","GET /auth/me"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts GET /auth/me should return user profile for valid token","status":"passed","title":"should return user profile for valid token","duration":1.0626250000000255,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Auth API Contracts","GET /auth/me"],"fullName":"API Contract Tests (MSW Layer) Auth API Contracts GET /auth/me should return 401 for expired/invalid token","status":"passed","title":"should return 401 for expired/invalid token","duration":0.9098749999999427,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Blog API Contracts","GET /blog/posts"],"fullName":"API Contract Tests (MSW Layer) Blog API Contracts GET /blog/posts should return paginated blog posts list","status":"passed","title":"should return paginated blog posts list","duration":1.9500000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Blog API Contracts","GET /blog/posts"],"fullName":"API Contract Tests (MSW Layer) Blog API Contracts GET /blog/posts should handle search and filter parameters","status":"passed","title":"should handle search and filter parameters","duration":2.417500000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Blog API Contracts","POST /blog/posts"],"fullName":"API Contract Tests (MSW Layer) Blog API Contracts POST /blog/posts should create new blog post with valid payload","status":"passed","title":"should create new blog post with valid payload","duration":1.2309580000001006,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Portfolio API Contracts","GET /portfolio/projects"],"fullName":"API Contract Tests (MSW Layer) Portfolio API Contracts GET /portfolio/projects should return projects list with proper structure","status":"passed","title":"should return projects list with proper structure","duration":0.84699999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Error Response Contracts"],"fullName":"API Contract Tests (MSW Layer) Error Response Contracts should handle 500 server errors with consistent structure","status":"passed","title":"should handle 500 server errors with consistent structure","duration":0.6604579999999487,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Error Response Contracts"],"fullName":"API Contract Tests (MSW Layer) Error Response Contracts should handle network timeouts appropriately","status":"passed","title":"should handle network timeouts appropriately","duration":102.12599999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["API Contract Tests (MSW Layer)","Error Response Contracts"],"fullName":"API Contract Tests (MSW Layer) Error Response Contracts should handle rate limiting (429) responses","status":"passed","title":"should handle rate limiting (429) responses","duration":0.9218329999999924,"failureMessages":[],"meta":{}}],"startTime":1754220300060,"endTime":1754220300193.9219,"status":"passed","message":"","name":"/Users/hong-yikao/Documents/Orionlabs/orionlabs-website/tests/unit/services/api-contract.spec.ts"},{"assertionResults":[{"ancestorTitles":["TokenManager","setToken"],"fullName":"TokenManager setToken should store token with default expiry (24 hours)","status":"passed","title":"should store token with default expiry (24 hours)","duration":1.1528339999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","setToken"],"fullName":"TokenManager setToken should store token with remember me (30 days)","status":"passed","title":"should store token with remember me (30 days)","duration":0.17620800000008785,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","setToken"],"fullName":"TokenManager setToken should store token with custom expiry","status":"passed","title":"should store token with custom expiry","duration":0.12454200000001947,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","setToken"],"fullName":"TokenManager setToken should set last login time","status":"passed","title":"should set last login time","duration":0.06974999999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getToken"],"fullName":"TokenManager getToken should return stored token","status":"passed","title":"should return stored token","duration":0.11220800000000963,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getToken"],"fullName":"TokenManager getToken should return null when no token stored","status":"passed","title":"should return null when no token stored","duration":0.08074999999996635,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getTokenType"],"fullName":"TokenManager getTokenType should return stored token type","status":"passed","title":"should return stored token type","duration":0.0638330000000451,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getTokenType"],"fullName":"TokenManager getTokenType should return default Bearer when no type stored","status":"passed","title":"should return default Bearer when no type stored","duration":0.08491700000001856,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isTokenExpired"],"fullName":"TokenManager isTokenExpired should return true when no expiry set","status":"passed","title":"should return true when no expiry set","duration":0.30491700000004585,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isTokenExpired"],"fullName":"TokenManager isTokenExpired should return true when token expired","status":"passed","title":"should return true when token expired","duration":0.08970799999997325,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isTokenExpired"],"fullName":"TokenManager isTokenExpired should return false when token not expired","status":"passed","title":"should return false when token not expired","duration":0.05291700000009314,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","hasValidToken"],"fullName":"TokenManager hasValidToken should return false when no token","status":"passed","title":"should return false when no token","duration":0.04462499999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","hasValidToken"],"fullName":"TokenManager hasValidToken should return false when token expired","status":"passed","title":"should return false when token expired","duration":0.04137500000001637,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","hasValidToken"],"fullName":"TokenManager hasValidToken should return true when token valid","status":"passed","title":"should return true when token valid","duration":0.03791599999999562,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRecentLogin"],"fullName":"TokenManager isRecentLogin should return false when no last login","status":"passed","title":"should return false when no last login","duration":0.04495900000006259,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRecentLogin"],"fullName":"TokenManager isRecentLogin should return false when login more than 24 hours ago","status":"passed","title":"should return false when login more than 24 hours ago","duration":0.03854200000000674,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRecentLogin"],"fullName":"TokenManager isRecentLogin should return true when login within 24 hours","status":"passed","title":"should return true when login within 24 hours","duration":0.03712500000006003,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getRemainingTime"],"fullName":"TokenManager getRemainingTime should return 0 when no expiry","status":"passed","title":"should return 0 when no expiry","duration":0.04637500000001182,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getRemainingTime"],"fullName":"TokenManager getRemainingTime should return 0 when expired","status":"passed","title":"should return 0 when expired","duration":0.037583000000040556,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","getRemainingTime"],"fullName":"TokenManager getRemainingTime should return remaining minutes","status":"passed","title":"should return remaining minutes","duration":0.03462500000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","clearToken"],"fullName":"TokenManager clearToken should remove all token related data","status":"passed","title":"should remove all token related data","duration":0.08179100000006656,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRemembered"],"fullName":"TokenManager isRemembered should return false by default","status":"passed","title":"should return false by default","duration":0.03816699999993034,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRemembered"],"fullName":"TokenManager isRemembered should return true when remember me is set","status":"passed","title":"should return true when remember me is set","duration":0.037833999999975276,"failureMessages":[],"meta":{}},{"ancestorTitles":["TokenManager","isRemembered"],"fullName":"TokenManager isRemembered should return false when remember me is false","status":"passed","title":"should return false when remember me is false","duration":0.03241600000001199,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","set and get"],"fullName":"CacheManager set and get should store and retrieve data","status":"passed","title":"should store and retrieve data","duration":0.25345900000002075,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","set and get"],"fullName":"CacheManager set and get should return null for non-existent key","status":"passed","title":"should return null for non-existent key","duration":0.036207999999987805,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","set and get"],"fullName":"CacheManager set and get should return null for expired data","status":"passed","title":"should return null for expired data","duration":0.04295799999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","set and get"],"fullName":"CacheManager set and get should return data within TTL","status":"passed","title":"should return data within TTL","duration":0.044417000000066764,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","delete"],"fullName":"CacheManager delete should remove specific key","status":"passed","title":"should remove specific key","duration":0.05333399999994981,"failureMessages":[],"meta":{}},{"ancestorTitles":["CacheManager","clear"],"fullName":"CacheManager clear should remove all cached data","status":"passed","title":"should remove all cached data","duration":0.04558299999996507,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","參數處理"],"fullName":"apiRequest 參數處理 should construct correct URL with endpoint","status":"passed","title":"should construct correct URL with endpoint","duration":2.399499999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","參數處理"],"fullName":"apiRequest 參數處理 should merge headers correctly","status":"passed","title":"should merge headers correctly","duration":0.40449999999998454,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","參數處理"],"fullName":"apiRequest 參數處理 should include auth headers when token exists","status":"passed","title":"should include auth headers when token exists","duration":0.505457999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","超時控制"],"fullName":"apiRequest 超時控制 should abort request after timeout","status":"passed","title":"should abort request after timeout","duration":1.3615839999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","超時控制"],"fullName":"apiRequest 超時控制 should handle AbortError correctly","status":"passed","title":"should handle AbortError correctly","duration":0.5288339999999607,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","重試機制"],"fullName":"apiRequest 重試機制 should not retry on non-network errors","status":"passed","title":"should not retry on non-network errors","duration":0.3387089999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","重試機制"],"fullName":"apiRequest 重試機制 should handle network errors without retries in this test","status":"passed","title":"should handle network errors without retries in this test","duration":0.19045900000003257,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle 401 status correctly","status":"passed","title":"should handle 401 status correctly","duration":0.14229199999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle 403 status correctly","status":"passed","title":"should handle 403 status correctly","duration":0.22166699999991124,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle 404 status correctly","status":"passed","title":"should handle 404 status correctly","duration":0.19724999999993997,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle 429 status correctly","status":"passed","title":"should handle 429 status correctly","duration":0.10470899999995709,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle 500 status correctly","status":"passed","title":"should handle 500 status correctly","duration":0.3494999999999209,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle JSON parse errors","status":"passed","title":"should handle JSON parse errors","duration":0.9263750000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","錯誤映射"],"fullName":"apiRequest 錯誤映射 should handle network errors (TypeError)","status":"passed","title":"should handle network errors (TypeError)","duration":0.18462499999998272,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","認證處理"],"fullName":"apiRequest 認證處理 should clear token on 401 for non-login endpoints","status":"passed","title":"should clear token on 401 for non-login endpoints","duration":0.1439579999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["apiRequest","認證處理"],"fullName":"apiRequest 認證處理 should not clear token on 401 for login endpoint","status":"passed","title":"should not clear token on 401 for login endpoint","duration":0.17604199999993853,"failureMessages":[],"meta":{}},{"ancestorTitles":["unifiedFetch"],"fullName":"unifiedFetch should call fetch with correct parameters","status":"passed","title":"should call fetch with correct parameters","duration":0.289792000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["unifiedFetch"],"fullName":"unifiedFetch should merge options correctly","status":"passed","title":"should merge options correctly","duration":0.19595799999990504,"failureMessages":[],"meta":{}}],"startTime":1754220300060,"endTime":1754220300073.196,"status":"passed","message":"","name":"/Users/hong-yikao/Documents/Orionlabs/orionlabs-website/tests/unit/services/api.spec.ts"},{"assertionResults":[{"ancestorTitles":["useAuthStore","初始狀態"],"fullName":"useAuthStore 初始狀態 should have correct initial state","status":"passed","title":"should have correct initial state","duration":1.9640829999999596,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","初始狀態"],"fullName":"useAuthStore 初始狀態 should load token from localStorage on initialization","status":"passed","title":"should load token from localStorage on initialization","duration":0.5140839999999116,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) isAuthenticated should return true when both token and user exist","status":"passed","title":"isAuthenticated should return true when both token and user exist","duration":0.26187500000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) isAuthenticated should return false when token missing","status":"passed","title":"isAuthenticated should return false when token missing","duration":0.16533299999991868,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) isAuthenticated should return false when user missing","status":"passed","title":"isAuthenticated should return false when user missing","duration":0.16337499999997362,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) isAdmin should return true for admin role","status":"passed","title":"isAdmin should return true for admin role","duration":0.12458299999991596,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) isAdmin should return false for non-admin role","status":"passed","title":"isAdmin should return false for non-admin role","duration":0.10191599999996015,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","computed getters (按您的規範：輸入→輸出驗證)"],"fullName":"useAuthStore computed getters (按您的規範：輸入→輸出驗證) hasError should return true when error exists","status":"passed","title":"hasError should return true when error exists","duration":0.3240419999999631,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","錯誤處理 actions"],"fullName":"useAuthStore 錯誤處理 actions setError should set error state","status":"passed","title":"setError should set error state","duration":0.4777910000000247,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","錯誤處理 actions"],"fullName":"useAuthStore 錯誤處理 actions clearError should clear error state","status":"passed","title":"clearError should clear error state","duration":0.1287920000000895,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","login action (按您的規範：直接 await)"],"fullName":"useAuthStore login action (按您的規範：直接 await) should login successfully","status":"passed","title":"should login successfully","duration":0.7964159999999083,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","login action (按您的規範：直接 await)"],"fullName":"useAuthStore login action (按您的規範：直接 await) should handle login failure","status":"passed","title":"should handle login failure","duration":0.19116700000006404,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","login action (按您的規範：直接 await)"],"fullName":"useAuthStore login action (按您的規範：直接 await) should handle network errors during login","status":"passed","title":"should handle network errors during login","duration":0.22333399999990888,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","login action (按您的規範：直接 await)"],"fullName":"useAuthStore login action (按您的規範：直接 await) should set loading states during login","status":"passed","title":"should set loading states during login","duration":0.144333999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","logout action"],"fullName":"useAuthStore logout action should logout successfully","status":"passed","title":"should logout successfully","duration":0.2492499999999609,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","logout action"],"fullName":"useAuthStore logout action should clear local state even if logout API fails","status":"passed","title":"should clear local state even if logout API fails","duration":0.12612500000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","checkAuth action"],"fullName":"useAuthStore checkAuth action should return false when no token","status":"passed","title":"should return false when no token","duration":0.154166000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","checkAuth action"],"fullName":"useAuthStore checkAuth action should verify token and set user on success","status":"passed","title":"should verify token and set user on success","duration":0.23824999999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","checkAuth action"],"fullName":"useAuthStore checkAuth action should handle 401 error and clear token","status":"passed","title":"should handle 401 error and clear token","duration":3.206083000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","checkAuth action"],"fullName":"useAuthStore checkAuth action should handle network errors and clear state","status":"passed","title":"should handle network errors and clear state","duration":0.4774159999999483,"failureMessages":[],"meta":{}},{"ancestorTitles":["useAuthStore","反應性依賴 (§R-2 規範遵循)"],"fullName":"useAuthStore 反應性依賴 (§R-2 規範遵循) computed values should update when dependencies change","status":"passed","title":"computed values should update when dependencies change","duration":0.1888330000000451,"failureMessages":[],"meta":{}}],"startTime":1754220300062,"endTime":1754220300073.1887,"status":"passed","message":"","name":"/Users/hong-yikao/Documents/Orionlabs/orionlabs-website/tests/unit/stores/auth.spec.ts"}]}